{"version":3,"sources":["components/Coin.js","components/Cryptodetails.js","App.js","index.js"],"names":["Coin","coinId","name","price","symbol","marketcap","volume","image","priceChange","loading","type","style","position","top","left","transform","color","height","width","className","src","alt","toLocaleString","toFixed","key","onClick","window","scrollTo","behavior","to","Title","Typography","Cryptodetails","useParams","useState","coinDetail","setCoinDetail","setLoading","useEffect","a","axios","get","res","data","console","log","fetchDetails","display","flexDirection","alignItems","justifyContent","textAlign","marginBottom","level","gutter","span","value","genesis_date","market_cap_rank","coingecko_rank","community_score","categories","sentiment_votes_up_percentage","App","sleep","milliseconds","Promise","resolve","setTimeout","current_price","id","market_cap","price_change_percentage_24h","total_volume","coins","setCoins","search","setSearch","postsPerPage","pageNumber","setPageNumber","pagesVisited","fetchCoins","currentCoins","filter","coin","toLowerCase","includes","displayCoins","slice","map","pageCount","Math","ceil","length","exact","path","render","onChange","e","target","placeholder","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ab8cf8e4.chunk.js","sourcesContent":["import React from 'react';\nimport './Coin.css';\nimport Loader from \"react-loader-spinner\";\nimport { Link } from 'react-router-dom';\nimport { Space } from 'antd';\n\nconst Coin = ({\n  coinId,\n  name,\n  price,\n  symbol,\n  marketcap,\n  volume,\n  image,\n  priceChange,\n  loading,\n}) => {\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n\n  if (loading) {\n    const style = { position: \"fixed\", top: \"50%\", left: \"50%\",\n     transform: \"translate(-50%, -50%)\" };\n\n    return <Loader type=\"Circles\" \n    style={style} \n    color=\"#00BFFF\" \n    height={\"100%\"} \n    width={\"100%\"}  /> ;\n  } \n\n  return (\n    <div className='coin-container'>\n      <div className='coin-row'>\n        <div className='coin'>\n          <img src={image} alt='crypto' />\n          <h1>{name}</h1>\n          <p className='coin-symbol'>{symbol}</p>\n        </div>\n        <div className='coin-data'>\n          <p className='coin-price'>${price}</p>\n          <p className='coin-volume'>${volume.toLocaleString()}</p>\n\n          {priceChange < 0 ? (\n            <p className='coin-percent red'>{priceChange.toFixed(2)}%</p>\n          ) : (\n            <p className='coin-percent green'>{priceChange.toFixed(2)}%</p>\n          )}\n\n          <p className='coin-marketcap'>\n            Mkt Cap: ${marketcap.toLocaleString()}\n          </p>\n          <Space>\n            <Link key={coinId} onClick={scrollToTop} to={`/cryptodetails/${coinId}`}> Show more </Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Coin;\n","import React, {useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Typography, Row, Col, Statistic, Space } from 'antd';\r\nimport axios from 'axios';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Cryptodetails = () => {\r\n  \r\n  const { coinId } = useParams();\r\n  const [coinDetail, setCoinDetail] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchDetails = async () => {\r\n      setLoading(true);\r\n      const res = await axios.get(`https://api.coingecko.com/api/v3/coins/${coinId}?localization=false&tickers=false&community_data=false&developer_data=false`);\r\n      setCoinDetail(res?.data);\r\n      console.log(res.data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchDetails();\r\n  }, [coinId]);\r\n\r\n  if (loading) {\r\n    const style = { position: \"fixed\", top: \"50%\", left: \"50%\",\r\n     transform: \"translate(-50%, -50%)\" };\r\n\r\n    return ( \r\n    <Loader type=\"Circles\" \r\n    style={style} \r\n    color=\"#00BFFF\" \r\n    height={\"100%\"} \r\n    width={\"100%\"}  /> \r\n    );\r\n  }\r\n  \r\n  const data = coinDetail;\r\n  const style = {display: 'flex', flexDirection: 'column', width: '100%', alignItems: 'center', \r\n      justifyContent: 'space-evenly', textAlign: 'center', marginBottom: '3%'};\r\n\r\n  return (\r\n      \r\n    <div style={style}>\r\n        <Title level={2} className=\"heading\">\r\n          {data?.name}\r\n        </Title>\r\n        <Row style={style} gutter={[12, 12]}>\r\n          <Col  span={12}>\r\n            <p> Genesis Date : <Statistic value={data?.genesis_date} /> </p>\r\n          </Col>\r\n          <Col  span={12}>\r\n             <p> Market Cap Rank : <Statistic\r\n              value={data.market_cap_rank}\r\n            /> </p> \r\n          </Col>\r\n          <Col span={12}>\r\n            <p> Coingecko Rank : <Statistic value={data?.coingecko_rank} /> </p>\r\n          </Col>\r\n                  <Col span={12}>\r\n                    <p> Community Score :\r\n                    <Statistic\r\n                      value={data?.community_score}\r\n                    />\r\n                    </p>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <p> Categories : \r\n                    <Statistic\r\n                      value={data?.categories}\r\n                    />\r\n                    </p>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <p> Sentiment Up % :\r\n                    <Statistic\r\n                      value={data?.sentiment_votes_up_percentage}\r\n                    />\r\n                    </p>\r\n                  </Col>\r\n          \r\n        </Row>\r\n        <Space>\r\n            <Link to=\"/React-Crypto-App/\"> Show less </Link>\r\n        </Space>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cryptodetails;\r\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport {Coin, Cryptodetails} from './components';  // import Pagination for manually implemented Pagination js file\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport { Typography } from 'antd';\nimport { Route } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate'; // using react-pagination package\n\n\nconst App = () => {\n  const sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }\n  const test = {\n    current_price: 0,\n    id: \"No id\",\n    image: \"No img\",\n    market_cap: 1078940938152,\n    name: \"No Match Found\",\n    price_change_percentage_24h: 0,\n    symbol: \"NA\",\n    total_volume: 0\n  }\n\n  const [coins, setCoins] = useState([test]);\n  const [search, setSearch] = useState('');\n  const [loading, setLoading] = useState(false);\n  //const [searching, setSearching] = useState(false);\n\n  // const [currentPage, setCurrentPage] = useState(1);  // manualPagination\n  const [postsPerPage] = useState(10);\n  const [pageNumber, setPageNumber] = useState(0);\n  const pagesVisited = pageNumber * postsPerPage;\n  \n\n  useEffect(() => {\n\n      const fetchCoins = async () => {\n        setLoading(true);\n        const res = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false');\n        setCoins(res?.data);\n        console.log(res.data);\n        await sleep(200);\n        setLoading(false);\n      };\n\n      fetchCoins();\n\n\n  }, []);\n\n  { if (loading) {\n    const style = { position: \"fixed\", top: \"50%\", left: \"50%\",\n     transform: \"translate(-50%, -50%)\" };\n\n    return ( \n    <Loader type=\"Circles\" \n    style={style} \n    color=\"#00BFFF\" \n    height={\"100%\"} \n    width={\"100%\"}  /> \n    );\n  } }\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n    //setSearching(true);\n  };\n\n  // Get current coins with or without manual pagination( uncomment lines )\n  // const indexOfLastCoin = currentPage * postsPerPage;\n  // const indexOfFirstCoin = indexOfLastCoin - postsPerPage;\n  const currentCoins = coins.filter(coin =>\n    coin.name.toLowerCase().includes(search.toLowerCase()));\n  // .slice(indexOfFirstCoin, indexOfLastCoin);\n\n  const displayCoins = currentCoins\n  .slice(pagesVisited, pagesVisited + postsPerPage)\n  .map((coin) => {\n    return (\n      <div>\n      <Coin\n        key={coin.id}\n        coinId={coin.id}\n        name={coin.name}\n        price={coin.current_price}\n        symbol={coin.symbol}\n        marketcap={coin.total_volume}\n        volume={coin.market_cap}\n        image={coin.image}\n        priceChange={coin.price_change_percentage_24h}\n        loading={loading}\n      />\n      </div>\n    );\n  });\n\n  // Change page for manual pagination\n  // const paginate = pageNumber => setCurrentPage(pageNumber)\n\n  const pageCount = Math.ceil(currentCoins.length / postsPerPage);\n  const onPageChange = ({selected}) => {\n    setPageNumber(selected);\n  }\n\n  return (\n\n    <div className='coin-app'>\n      <Route exact path=\"/cryptodetails/:coinId\" render={() => (\n          <Cryptodetails/> )}\n      />\n      <div className='coin-search'>\n        <h1 className='coin-text'> Crypto Scout </h1>\n        <form>\n          <input\n            className='coin-input'\n            type='text'\n            onChange={handleChange}\n            placeholder='Enter Currency Name'\n          />\n        </form>\n      </div>\n      \n      {/* \n      Uncomment for manual pagination.\n      \n      {currentCoins?.map(coin => {\n        return (\n          <div>\n          <Coin\n            key={coin.id}\n            coinId={coin.id}\n            name={coin.name}\n            price={coin.current_price}\n            symbol={coin.symbol}\n            marketcap={coin.total_volume}\n            volume={coin.market_cap}\n            image={coin.image}\n            priceChange={coin.price_change_percentage_24h}\n            loading={loading}\n          />\n          </div>\n        );\n      })} */}\n\n\n      {displayCoins}\n      <ReactPaginate \n        previousLabel={\"Previous\"}\n        nextLabel={\"Next\"} \n        pageCount={pageCount}\n        onPageChange={onPageChange}\n        containerClassName={\"paginationBttns\"}\n        previousLinkClassName={\"previousBttns\"}\n        nextLinkClassName={\"nextBttns\"}\n        disabledClassName={\"paginationDisabled\"}\n        activeClassName={\"paginationActive\"}\n      />\n\n\n      {/* \n      manual pagination container\n\n      <Pagination\n            postsPerPage={postsPerPage}\n            totalPosts={coins.length}\n            paginate={paginate}\n          />\n       */}\n\n\n      <div className=\"footer\">\n        <Typography.Title level={5}>\n              All Rights Reserved @Cryptoscout Inc. \n        </Typography.Title>\n      </div>\n      \n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}